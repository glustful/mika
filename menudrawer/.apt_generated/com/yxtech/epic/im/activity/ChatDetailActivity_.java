//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.0.1.
//


package com.yxst.epic.yixin.activity;

import java.io.Serializable;
import java.util.List;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.TextView;
import com.miicaa.home.R.id;
import com.miicaa.home.R.layout;
import com.yxst.epic.yixin.adapter.ChatDetailAdapter_;
import com.yxst.epic.yixin.data.dto.model.Member;
import com.yxst.epic.yixin.data.dto.response.AddQunMemberResponse;
import com.yxst.epic.yixin.data.dto.response.CreateQunResponse;
import com.yxst.epic.yixin.data.dto.response.DelQunMemberResponse;
import com.yxst.epic.yixin.data.dto.response.GetMemberResponse;
import com.yxst.epic.yixin.data.dto.response.GetQunMembersResponse;
import com.yxst.epic.yixin.data.dto.response.UpdateQunTopicResponse;
import com.yxst.epic.yixin.view.WrapContentHeightGridView;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.SdkVersionHelper;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;
import org.springframework.web.client.RestClientException;

public final class ChatDetailActivity_
    extends ChatDetailActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    public final static String LOCAL_MEMBER_EXTRA = "localMember";
    public final static String REMOTE_USER_NAME_EXTRA = "remoteUserName";
    public final static String REMOTE_DISPLAY_NAME_EXTRA = "remoteDisplayName";
    public final static String LOCAL_USER_NAME_EXTRA = "localUserName";
    private Handler handler_ = new Handler(Looper.getMainLooper());

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_chat_detail);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        injectExtras_();
        mAdapter = ChatDetailAdapter_.getInstance_(this);
        afterInject();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static ChatDetailActivity_.IntentBuilder_ intent(Context context) {
        return new ChatDetailActivity_.IntentBuilder_(context);
    }

    public static ChatDetailActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new ChatDetailActivity_.IntentBuilder_(fragment);
    }

    public static ChatDetailActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new ChatDetailActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        mGridView = ((WrapContentHeightGridView) hasViews.findViewById(id.grid));
        tvQun = ((TextView) hasViews.findViewById(id.tvQun));
        trQun = ((View) hasViews.findViewById(id.trQun));
        {
            View view = hasViews.findViewById(id.trQun);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        ChatDetailActivity_.this.onClickTrQun(view);
                    }

                }
                );
            }
        }
        afterViews();
    }

    private void injectExtras_() {
        Bundle extras_ = getIntent().getExtras();
        if (extras_!= null) {
            if (extras_.containsKey(LOCAL_MEMBER_EXTRA)) {
                localMember = ((Member) extras_.getSerializable(LOCAL_MEMBER_EXTRA));
            }
            if (extras_.containsKey(REMOTE_USER_NAME_EXTRA)) {
                remoteUserName = extras_.getString(REMOTE_USER_NAME_EXTRA);
            }
            if (extras_.containsKey(REMOTE_DISPLAY_NAME_EXTRA)) {
                remoteDisplayName = extras_.getString(REMOTE_DISPLAY_NAME_EXTRA);
            }
            if (extras_.containsKey(LOCAL_USER_NAME_EXTRA)) {
                localUserName = extras_.getString(LOCAL_USER_NAME_EXTRA);
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode) {
            case  1 :
                ChatDetailActivity_.this.onActivityResult(resultCode, data);
                break;
        }
    }

    @Override
    public void getMemberOnPostExecute(final GetMemberResponse response) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                ChatDetailActivity_.super.getMemberOnPostExecute(response);
            }

        }
        );
    }

    @Override
    public void delQunMemberOnPostExecute(final DelQunMemberResponse response) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                ChatDetailActivity_.super.delQunMemberOnPostExecute(response);
            }

        }
        );
    }

    @Override
    public void getQunMembersOnPostExecute(final GetQunMembersResponse response) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                ChatDetailActivity_.super.getQunMembersOnPostExecute(response);
            }

        }
        );
    }

    @Override
    public void onPreExecute() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                ChatDetailActivity_.super.onPreExecute();
            }

        }
        );
    }

    @Override
    public void addQunMemberOnPostExecute(final AddQunMemberResponse response) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                ChatDetailActivity_.super.addQunMemberOnPostExecute(response);
            }

        }
        );
    }

    @Override
    public void updateQunTopicOnPostExecute(final UpdateQunTopicResponse response, final String topic) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                ChatDetailActivity_.super.updateQunTopicOnPostExecute(response, topic);
            }

        }
        );
    }

    @Override
    public void createQunOnPostExecute(final CreateQunResponse response) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                ChatDetailActivity_.super.createQunOnPostExecute(response);
            }

        }
        );
    }

    @Override
    public void onRestClientExceptionThrown(final RestClientException e) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                ChatDetailActivity_.super.onRestClientExceptionThrown(e);
            }

        }
        );
    }

    @Override
    public void updateQunTopicDoInBackground(final String topic) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    ChatDetailActivity_.super.updateQunTopicDoInBackground(topic);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void addQunMemberDoInBackground(final List<Member> members) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    ChatDetailActivity_.super.addQunMemberDoInBackground(members);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void delMemberDoInBackground(final Member member) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    ChatDetailActivity_.super.delMemberDoInBackground(member);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void getQunMembersDoInBackground() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    ChatDetailActivity_.super.getQunMembersDoInBackground();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void createQunDoInBackground(final List<Member> members) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    ChatDetailActivity_.super.createQunDoInBackground(members);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void getMemberDoInBackground() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    ChatDetailActivity_.super.getMemberDoInBackground();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;
        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, ChatDetailActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            fragment_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, ChatDetailActivity_.class);
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            fragmentSupport_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, ChatDetailActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public ChatDetailActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent_, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent_, requestCode);
                } else {
                    if (context_ instanceof Activity) {
                        ((Activity) context_).startActivityForResult(intent_, requestCode);
                    } else {
                        context_.startActivity(intent_);
                    }
                }
            }
        }

        public ChatDetailActivity_.IntentBuilder_ localMember(Member localMember) {
            intent_.putExtra(LOCAL_MEMBER_EXTRA, ((Serializable) localMember));
            return this;
        }

        public ChatDetailActivity_.IntentBuilder_ remoteUserName(String remoteUserName) {
            intent_.putExtra(REMOTE_USER_NAME_EXTRA, remoteUserName);
            return this;
        }

        public ChatDetailActivity_.IntentBuilder_ remoteDisplayName(String remoteDisplayName) {
            intent_.putExtra(REMOTE_DISPLAY_NAME_EXTRA, remoteDisplayName);
            return this;
        }

        public ChatDetailActivity_.IntentBuilder_ localUserName(String localUserName) {
            intent_.putExtra(LOCAL_USER_NAME_EXTRA, localUserName);
            return this;
        }

    }

}
