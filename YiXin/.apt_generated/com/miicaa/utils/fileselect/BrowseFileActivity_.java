//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.0.1.
//


package com.miicaa.utils.fileselect;

import java.io.Serializable;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.view.View;
import android.view.ViewGroup.LayoutParams;
import android.webkit.WebView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import com.miicaa.home.R.id;
import com.miicaa.home.R.layout;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class BrowseFileActivity_
    extends BrowseFileActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    public final static String IS_ADMIN_EXTRA = "isAdmin";
    public final static String IS_ATTACHMENT_EXTRA = "isAttachment";
    public final static String M_ID_EXTRA = "mId";
    public final static String JSON_EXTRA = "json";
    public final static String FILE_TYPE_EXTRA = "fileType";
    public final static String NAME_EXTRA = "name";
    private Handler handler_ = new Handler(Looper.getMainLooper());

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_browse_file);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        injectExtras_();
        afterInject();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static BrowseFileActivity_.IntentBuilder_ intent(Context context) {
        return new BrowseFileActivity_.IntentBuilder_(context);
    }

    public static BrowseFileActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new BrowseFileActivity_.IntentBuilder_(fragment);
    }

    public static BrowseFileActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new BrowseFileActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        headView = ((RelativeLayout) hasViews.findViewById(id.headView));
        webView = ((WebView) hasViews.findViewById(id.webView));
        textView = ((TextView) hasViews.findViewById(id.textView));
        footView = ((BrowseFileFootView) hasViews.findViewById(id.footView));
        progressBar = ((ProgressBar) hasViews.findViewById(id.progressBar));
        afterView();
    }

    private void injectExtras_() {
        Bundle extras_ = getIntent().getExtras();
        if (extras_!= null) {
            if (extras_.containsKey(IS_ADMIN_EXTRA)) {
                isAdmin = ((Boolean) extras_.getSerializable(IS_ADMIN_EXTRA));
            }
            if (extras_.containsKey(IS_ATTACHMENT_EXTRA)) {
                isAttachment = extras_.getBoolean(IS_ATTACHMENT_EXTRA);
            }
            if (extras_.containsKey(M_ID_EXTRA)) {
                mId = extras_.getString(M_ID_EXTRA);
            }
            if (extras_.containsKey(JSON_EXTRA)) {
                json = extras_.getString(JSON_EXTRA);
            }
            if (extras_.containsKey(FILE_TYPE_EXTRA)) {
                fileType = extras_.getString(FILE_TYPE_EXTRA);
            }
            if (extras_.containsKey(NAME_EXTRA)) {
                name = extras_.getString(NAME_EXTRA);
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    @Override
    public void update(final int num) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                BrowseFileActivity_.super.update(num);
            }

        }
        );
    }

    @Override
    public void showTxt(final String content) {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                BrowseFileActivity_.super.showTxt(content);
            }

        }
        );
    }

    @Override
    public void loading() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                BrowseFileActivity_.super.loading();
            }

        }
        );
    }

    @Override
    public void loaded() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                BrowseFileActivity_.super.loaded();
            }

        }
        );
    }

    @Override
    public void txtShow(final String path) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    BrowseFileActivity_.super.txtShow(path);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;
        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, BrowseFileActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            fragment_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, BrowseFileActivity_.class);
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            fragmentSupport_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, BrowseFileActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public BrowseFileActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent_, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent_, requestCode);
                } else {
                    if (context_ instanceof Activity) {
                        ((Activity) context_).startActivityForResult(intent_, requestCode);
                    } else {
                        context_.startActivity(intent_);
                    }
                }
            }
        }

        public BrowseFileActivity_.IntentBuilder_ isAdmin(Boolean isAdmin) {
            intent_.putExtra(IS_ADMIN_EXTRA, ((Serializable) isAdmin));
            return this;
        }

        public BrowseFileActivity_.IntentBuilder_ isAttachment(boolean isAttachment) {
            intent_.putExtra(IS_ATTACHMENT_EXTRA, isAttachment);
            return this;
        }

        public BrowseFileActivity_.IntentBuilder_ mId(String mId) {
            intent_.putExtra(M_ID_EXTRA, mId);
            return this;
        }

        public BrowseFileActivity_.IntentBuilder_ json(String json) {
            intent_.putExtra(JSON_EXTRA, json);
            return this;
        }

        public BrowseFileActivity_.IntentBuilder_ fileType(String fileType) {
            intent_.putExtra(FILE_TYPE_EXTRA, fileType);
            return this;
        }

        public BrowseFileActivity_.IntentBuilder_ name(String name) {
            intent_.putExtra(NAME_EXTRA, name);
            return this;
        }

    }

}
