//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.0.1.
//


package com.miicaa.home.ui.checkwork;

import java.io.Serializable;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import com.miicaa.common.base.PictureLayout;
import com.miicaa.home.R.id;
import com.miicaa.home.R.layout;
import org.androidannotations.api.SdkVersionHelper;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class CheckWorkSignActivity_
    extends CheckWorkSignActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    public final static String NOW_TIME_EXTRA = "nowTime";
    public final static String SIGN_STATE_EXTRA = "signState";
    public final static String XIABAN_TIME_STR_EXTRA = "xiabanTimeStr";

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.activity_checkwork_sign);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        injectExtras_();
        afterInject();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static CheckWorkSignActivity_.IntentBuilder_ intent(Context context) {
        return new CheckWorkSignActivity_.IntentBuilder_(context);
    }

    public static CheckWorkSignActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new CheckWorkSignActivity_.IntentBuilder_(fragment);
    }

    public static CheckWorkSignActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new CheckWorkSignActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        locationButton = ((Button) hasViews.findViewById(id.locationBtn));
        zishuTextView = ((TextView) hasViews.findViewById(id.zishuTextView));
        progressLayout = ((LinearLayout) hasViews.findViewById(id.progressLayout));
        editText = ((EditText) hasViews.findViewById(id.editText));
        progressBar = ((ProgressBar) hasViews.findViewById(id.progressBar));
        progressText = ((TextView) hasViews.findViewById(id.progressText));
        photo = ((PictureLayout) hasViews.findViewById(id.photo));
        {
            View view = hasViews.findViewById(id.locationBtn);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        CheckWorkSignActivity_.this.locationBtnClick();
                    }

                }
                );
            }
        }
        {
            final TextView view = ((TextView) hasViews.findViewById(id.editText));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                        CheckWorkSignActivity_.this.onTextChangesOnEditText(s, view, before, start, count);
                    }

                    @Override
                    public void afterTextChanged(Editable s) {
                    }

                }
                );
            }
        }
        afterView();
    }

    private void injectExtras_() {
        Bundle extras_ = getIntent().getExtras();
        if (extras_!= null) {
            if (extras_.containsKey(NOW_TIME_EXTRA)) {
                nowTime = ((Long) extras_.getSerializable(NOW_TIME_EXTRA));
            }
            if (extras_.containsKey(SIGN_STATE_EXTRA)) {
                signState = extras_.getString(SIGN_STATE_EXTRA);
            }
            if (extras_.containsKey(XIABAN_TIME_STR_EXTRA)) {
                xiabanTimeStr = extras_.getString(XIABAN_TIME_STR_EXTRA);
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode) {
            case  0 :
                CheckWorkSignActivity_.this.takePicture(resultCode, data);
                break;
        }
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;
        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, CheckWorkSignActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            fragment_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, CheckWorkSignActivity_.class);
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            fragmentSupport_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, CheckWorkSignActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public CheckWorkSignActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent_, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent_, requestCode);
                } else {
                    if (context_ instanceof Activity) {
                        ((Activity) context_).startActivityForResult(intent_, requestCode);
                    } else {
                        context_.startActivity(intent_);
                    }
                }
            }
        }

        public CheckWorkSignActivity_.IntentBuilder_ nowTime(Long nowTime) {
            intent_.putExtra(NOW_TIME_EXTRA, ((Serializable) nowTime));
            return this;
        }

        public CheckWorkSignActivity_.IntentBuilder_ signState(String signState) {
            intent_.putExtra(SIGN_STATE_EXTRA, signState);
            return this;
        }

        public CheckWorkSignActivity_.IntentBuilder_ xiabanTimeStr(String xiabanTimeStr) {
            intent_.putExtra(XIABAN_TIME_STR_EXTRA, xiabanTimeStr);
            return this;
        }

    }

}
