//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.0.1.
//


package com.miicaa.home.ui.report;

import java.io.Serializable;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.miicaa.home.R.id;
import com.miicaa.home.R.layout;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class ReportItemDetailActivity_
    extends ReportItemDetailActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    public final static String INFO_EXTRA = "info";
    public final static String IS_EDIT_EXTRA = "isEdit";
    public final static String IS_FINISH_EXTRA = "isFinish";
    public final static String JSON_STR_EXTRA = "jsonStr";

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.report_item_detail_view);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        injectExtras_();
        initData();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static ReportItemDetailActivity_.IntentBuilder_ intent(Context context) {
        return new ReportItemDetailActivity_.IntentBuilder_(context);
    }

    public static ReportItemDetailActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new ReportItemDetailActivity_.IntentBuilder_(fragment);
    }

    public static ReportItemDetailActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new ReportItemDetailActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        planStart = ((TextView) hasViews.findViewById(id.planStart));
        headTitle = ((TextView) hasViews.findViewById(id.pay_headTitle));
        back = ((Button) hasViews.findViewById(id.pay_cancleButton));
        progress = ((EditText) hasViews.findViewById(id.report_item_detail_progress));
        percentLabel = ((TextView) hasViews.findViewById(id.report_item_detail_percent_label));
        title = ((EditText) hasViews.findViewById(id.report_item_detail_title));
        timeLabel = ((TextView) hasViews.findViewById(id.report_item_detail_time_label));
        commit = ((Button) hasViews.findViewById(id.pay_commitButton));
        progressLabel = ((TextView) hasViews.findViewById(id.report_item_detail_progress_label));
        progressLabel1 = ((TextView) hasViews.findViewById(id.report_item_detail_progress_label1));
        totalCount = ((TextView) hasViews.findViewById(id.totalcount));
        planEnd = ((TextView) hasViews.findViewById(id.planEnd));
        descript = ((EditText) hasViews.findViewById(id.desc));
        percent = ((EditText) hasViews.findViewById(id.report_item_detail_percent));
        planLayout = ((LinearLayout) hasViews.findViewById(id.planLayout));
        progLayout = ((LinearLayout) hasViews.findViewById(id.progressLayout));
        timeLabel1 = ((TextView) hasViews.findViewById(id.report_item_detail_time_label1));
        percentLabel1 = ((TextView) hasViews.findViewById(id.report_item_detail_percent_label1));
        time = ((EditText) hasViews.findViewById(id.report_item_detail_time));
        {
            View view = hasViews.findViewById(id.planStart);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        ReportItemDetailActivity_.this.start();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.planEnd);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        ReportItemDetailActivity_.this.end();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.pay_commitButton);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        ReportItemDetailActivity_.this.more(view);
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.pay_cancleButton);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        ReportItemDetailActivity_.this.cancel(view);
                    }

                }
                );
            }
        }
        {
            final TextView view = ((TextView) hasViews.findViewById(id.report_item_detail_progress));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                    }

                    @Override
                    public void afterTextChanged(Editable s) {
                        ReportItemDetailActivity_.this.textChange(view);
                    }

                }
                );
            }
        }
        {
            final TextView view = ((TextView) hasViews.findViewById(id.report_item_detail_percent));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                    }

                    @Override
                    public void afterTextChanged(Editable s) {
                        ReportItemDetailActivity_.this.textChange1(view);
                    }

                }
                );
            }
        }
        {
            final TextView view = ((TextView) hasViews.findViewById(id.report_item_detail_time));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                    }

                    @Override
                    public void afterTextChanged(Editable s) {
                        ReportItemDetailActivity_.this.timeChange(view);
                    }

                }
                );
            }
        }
        {
            final TextView view = ((TextView) hasViews.findViewById(id.report_item_detail_title));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                    }

                    @Override
                    public void afterTextChanged(Editable s) {
                        ReportItemDetailActivity_.this.titleChange(s);
                    }

                }
                );
            }
        }
        {
            final TextView view = ((TextView) hasViews.findViewById(id.desc));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                    }

                    @Override
                    public void afterTextChanged(Editable s) {
                        ReportItemDetailActivity_.this.textChange();
                    }

                }
                );
            }
        }
        initUI();
    }

    private void injectExtras_() {
        Bundle extras_ = getIntent().getExtras();
        if (extras_!= null) {
            if (extras_.containsKey(INFO_EXTRA)) {
                info = ((ReportDetailInfo) extras_.getSerializable(INFO_EXTRA));
            }
            if (extras_.containsKey(IS_EDIT_EXTRA)) {
                isEdit = extras_.getBoolean(IS_EDIT_EXTRA);
            }
            if (extras_.containsKey(IS_FINISH_EXTRA)) {
                isFinish = extras_.getBoolean(IS_FINISH_EXTRA);
            }
            if (extras_.containsKey(JSON_STR_EXTRA)) {
                jsonStr = extras_.getString(JSON_STR_EXTRA);
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;
        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, ReportItemDetailActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            fragment_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, ReportItemDetailActivity_.class);
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            fragmentSupport_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, ReportItemDetailActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public ReportItemDetailActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent_, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent_, requestCode);
                } else {
                    if (context_ instanceof Activity) {
                        ((Activity) context_).startActivityForResult(intent_, requestCode);
                    } else {
                        context_.startActivity(intent_);
                    }
                }
            }
        }

        public ReportItemDetailActivity_.IntentBuilder_ info(ReportDetailInfo info) {
            intent_.putExtra(INFO_EXTRA, ((Serializable) info));
            return this;
        }

        public ReportItemDetailActivity_.IntentBuilder_ isEdit(boolean isEdit) {
            intent_.putExtra(IS_EDIT_EXTRA, isEdit);
            return this;
        }

        public ReportItemDetailActivity_.IntentBuilder_ isFinish(boolean isFinish) {
            intent_.putExtra(IS_FINISH_EXTRA, isFinish);
            return this;
        }

        public ReportItemDetailActivity_.IntentBuilder_ jsonStr(String jsonStr) {
            intent_.putExtra(JSON_STR_EXTRA, jsonStr);
            return this;
        }

    }

}
