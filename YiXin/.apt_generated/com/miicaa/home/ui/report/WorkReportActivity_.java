//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.0.1.
//


package com.miicaa.home.ui.report;

import java.io.Serializable;
import java.util.ArrayList;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnTouchListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import com.miicaa.home.R.id;
import com.miicaa.home.R.layout;
import com.miicaa.home.data.business.matter.AccessoryInfo;
import com.yxst.epic.yixin.view.InnerScrollView;
import org.androidannotations.api.BackgroundExecutor;
import org.androidannotations.api.SdkVersionHelper;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class WorkReportActivity_
    extends WorkReportActivity
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    public final static String PNGS_EXTRA = "pngs";
    public final static String REPORT_TYPE_EXTRA = "reportType";
    public final static String M_INFO_EXTRA = "mInfo";
    public final static String TFILES_EXTRA = "tfiles";

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.matter_report_activity);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        injectExtras_();
        initData();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static WorkReportActivity_.IntentBuilder_ intent(Context context) {
        return new WorkReportActivity_.IntentBuilder_(context);
    }

    public static WorkReportActivity_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new WorkReportActivity_.IntentBuilder_(fragment);
    }

    public static WorkReportActivity_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new WorkReportActivity_.IntentBuilder_(supportFragment);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        customTop = ((LinearLayout) hasViews.findViewById(id.report_custom_top));
        todayTimeLabel2 = ((TextView) hasViews.findViewById(id.report_today_time_label2));
        desc = ((EditText) hasViews.findViewById(id.report_desc));
        back = ((Button) hasViews.findViewById(id.pay_cancleButton));
        todayTimeLabel1 = ((TextView) hasViews.findViewById(id.report_today_time_label1));
        mAddPhotoLayout = ((FrameLayout) hasViews.findViewById(id.fileAddLayout));
        customName = ((EditText) hasViews.findViewById(id.report_custom_name));
        todayList = ((LinearLayout) hasViews.findViewById(id.report_today_list));
        tomorrowLabel = ((TextView) hasViews.findViewById(id.report_tomorrow_lael));
        todayTitleLabel = ((TextView) hasViews.findViewById(id.report_today_title_lael));
        todayScroll = ((InnerScrollView) hasViews.findViewById(id.report_today_scroll));
        tomorrowTimeLabel1 = ((TextView) hasViews.findViewById(id.report_tomorrow_time_label1));
        tomorrowList = ((LinearLayout) hasViews.findViewById(id.report_tomorrow_list));
        tomorrowTimeLabel2 = ((TextView) hasViews.findViewById(id.report_tomorrow_time_label2));
        roundLabel = ((TextView) hasViews.findViewById(id.report_round_people_name));
        todayLabel = ((TextView) hasViews.findViewById(id.report_today_lael));
        discuName = ((TextView) hasViews.findViewById(id.report_discu_people_name));
        tomorrowTitleLabel = ((TextView) hasViews.findViewById(id.report_tomorrow_title_lael));
        tomorrowScroll = ((InnerScrollView) hasViews.findViewById(id.report_tomorrow_scroll));
        parentScroll = ((ScrollView) hasViews.findViewById(id.report_parent_scroll));
        todayPlusEdit = ((EditText) hasViews.findViewById(id.report_today_plus_edit));
        commit = ((Button) hasViews.findViewById(id.pay_commitButton));
        tomorrowPlusEdit = ((EditText) hasViews.findViewById(id.report_tomorrow_plus_edit));
        tagLabel = ((TextView) hasViews.findViewById(id.report_tag_label));
        headTitle = ((TextView) hasViews.findViewById(id.pay_headTitle));
        {
            View view = hasViews.findViewById(id.pay_cancleButton);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        WorkReportActivity_.this.back();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.report_tomorrow_auto);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        WorkReportActivity_.this.tomorrowAuto();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.report_round_select);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        WorkReportActivity_.this.roundSelect();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.report_tag_layout);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        WorkReportActivity_.this.tag();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.report_today_time_label1);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        WorkReportActivity_.this.todayClick(view);
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.report_discu_people);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        WorkReportActivity_.this.roundPeople();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.report_today_plus);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        WorkReportActivity_.this.todayPlus();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.report_today_auto);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        WorkReportActivity_.this.todayAuto();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.report_today_time_label2);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        WorkReportActivity_.this.todayClick1(view);
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.report_tomorrow_time_label1);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        WorkReportActivity_.this.tomorrow(view);
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.report_tomorrow_plus);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        WorkReportActivity_.this.tomorrowPlus();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.pay_commitButton);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        WorkReportActivity_.this.commit();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.report_tomorrow_time_label2);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        WorkReportActivity_.this.tomorrow1(view);
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.topView);
            if (view!= null) {
                view.setOnTouchListener(new OnTouchListener() {


                    @Override
                    public boolean onTouch(View view, MotionEvent event) {
                        return WorkReportActivity_.this.touch(event, view);
                    }

                }
                );
            }
        }
        {
            final TextView view = ((TextView) hasViews.findViewById(id.report_today_plus_edit));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                    }

                    @Override
                    public void afterTextChanged(Editable s) {
                        WorkReportActivity_.this.change1(s);
                    }

                }
                );
            }
        }
        {
            final TextView view = ((TextView) hasViews.findViewById(id.report_tomorrow_plus_edit));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                    }

                    @Override
                    public void afterTextChanged(Editable s) {
                        WorkReportActivity_.this.change2(s);
                    }

                }
                );
            }
        }
        {
            final TextView view = ((TextView) hasViews.findViewById(id.report_custom_name));
            if (view!= null) {
                view.addTextChangedListener(new TextWatcher() {


                    @Override
                    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                    }

                    @Override
                    public void onTextChanged(CharSequence s, int start, int before, int count) {
                    }

                    @Override
                    public void afterTextChanged(Editable s) {
                        WorkReportActivity_.this.change(s);
                    }

                }
                );
            }
        }
        initUI();
    }

    private void injectExtras_() {
        Bundle extras_ = getIntent().getExtras();
        if (extras_!= null) {
            if (extras_.containsKey(PNGS_EXTRA)) {
                pngs = ((ArrayList<AccessoryInfo> ) extras_.getSerializable(PNGS_EXTRA));
            }
            if (extras_.containsKey(REPORT_TYPE_EXTRA)) {
                reportType = extras_.getInt(REPORT_TYPE_EXTRA);
            }
            if (extras_.containsKey(M_INFO_EXTRA)) {
                mInfo = ((ReportDetailInfo) extras_.getSerializable(M_INFO_EXTRA));
            }
            if (extras_.containsKey(TFILES_EXTRA)) {
                tfiles = ((ArrayList<AccessoryInfo> ) extras_.getSerializable(TFILES_EXTRA));
            }
        }
    }

    @Override
    public void setIntent(Intent newIntent) {
        super.setIntent(newIntent);
        injectExtras_();
    }

    @Override
    public void initWeek() {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    WorkReportActivity_.super.initWeek();
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;
        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, WorkReportActivity_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            fragment_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, WorkReportActivity_.class);
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            fragmentSupport_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, WorkReportActivity_.class);
        }

        public Intent get() {
            return intent_;
        }

        public WorkReportActivity_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent_, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent_, requestCode);
                } else {
                    if (context_ instanceof Activity) {
                        ((Activity) context_).startActivityForResult(intent_, requestCode);
                    } else {
                        context_.startActivity(intent_);
                    }
                }
            }
        }

        public WorkReportActivity_.IntentBuilder_ pngs(ArrayList<AccessoryInfo> pngs) {
            intent_.putExtra(PNGS_EXTRA, ((Serializable) pngs));
            return this;
        }

        public WorkReportActivity_.IntentBuilder_ reportType(int reportType) {
            intent_.putExtra(REPORT_TYPE_EXTRA, reportType);
            return this;
        }

        public WorkReportActivity_.IntentBuilder_ mInfo(ReportDetailInfo mInfo) {
            intent_.putExtra(M_INFO_EXTRA, ((Serializable) mInfo));
            return this;
        }

        public WorkReportActivity_.IntentBuilder_ tfiles(ArrayList<AccessoryInfo> tfiles) {
            intent_.putExtra(TFILES_EXTRA, ((Serializable) tfiles));
            return this;
        }

    }

}
